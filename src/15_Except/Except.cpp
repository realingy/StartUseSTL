/************************************************************************************
fun(int a , int b){
	//
}

fun2()
{
	string a, b;
	fun(a,b); //数据类型导致异常
}

//1.函数返回值可以忽略，但是异常不可以忽略，如果程序出现异常但是没有捕获异常，程序就会终止
//2.返回值没有语义信息，异常却包含了语义信息，有时从类名就能看出来异常信息
//3.异常作为一个类，可以有自己的数据成员，以提供足够的信息
//4.
***********************************************************************************/

#include <iostream>
using namespace std;

int divide(int a, int b) {
	if(b == 0) {
		throw b; //抛出异常
	}

	return a / b;
}

void Test1() 
{
	try{
		divide(10, 0); //尝试捕获异常
	}
	catch(int e) {
		//捕获到异常时，根据类型进行匹配
		cout << "除数为" << e << endl;
	}
}

//2.两层调用异常，在被调用函数中调用异常函数
void CallDivide(int a, int b)
{
	divide(a,b); //不去尝试捕获异常，未处理的异常会继续传递
}

void Test2()
{
	try{
		CallDivide(10, 0); //尝试捕获异常
	}
	catch(int e) {
		//捕获到异常时，根据类型进行匹配
		cout << "除数为 " << e << endl;
	}
}

int main()
{
	//Test1(); //调用测试函数
	Test2(); //2.同样可以捕获异常

	system("pause");
	return 0;
}